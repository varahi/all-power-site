page.meta {
    revisit             = 1
    revisit-after       = 7 days
    imagetoolbar        = no

    #keywords.field      = keywords
    #keywords.ifEmpty    = {$page.meta.keywords}
    #description.field   = description
    #description.ifEmpty = {$page.meta.description}
    #abstract.field      = abstract
    #abstract.ifEmpty    = {$page.meta.abstract}
    #page-topic.field    = title
    #page-topic.ifEmpty  = {$page.meta.topic}
    #author              = {$page.meta.autor}

    cache-control = max-age=0
    cache-control = no-cache
    expires = 0
    pragma = no-cache

    local_all           = {$config.locale_all}
    language            = {$config.language}
    //robots              = index,follow
    robots               = noindex,nofollow
    #sviewport = width=device-width
    viewport             = width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=yes
    #MSSmartTagsPreventParsing = true
    SKYPE_TOOLBAR = SKYPE_TOOLBAR_PARSER_COMPATIBLE

    X-UA-Compatible = IE=edge
    X-UA-Compatible.attribute = http-equiv

    # OpenGraph tags
    /*
    og:title {
        attribute = property
        field = title
    }
    og:site_name {
        attribute = property
        data = TSFE:tmpl|setup|sitetitle
    }
    og:description = {$page.meta.description}
    og:description {
        attribute = property
        field = description
    }
    */

}

temp.paginateTitle = COA
temp.paginateTitle {
    if.isTrue.data = GP:tx_news_pi1|@widget_0|currentPage
    10 = TEXT
    10 {
        data = GP:tx_news_pi1|@widget_0|currentPage
        intval = 1
        htmlSpecialChars = 1
    }
    wrap = &nbsp;- Seite &nbsp;|
}

temp.pageTitle = TEXT
temp.pageTitle.field=title

/*
page.headerData {
    # Add Open Graph meta
    1 = COA
    1 {
        10 = TEXT
        10 {
            value = {$config.page.siteTitle} : {TSFE:page|title}
            insertData = 1
            dataWrap = <meta property="og:title" content="|">
        }
        20 = TEXT
        20 {
            value = article
            wrap = <meta property="og:type" content="|">
        }
        30 = TEXT
        30 {
            typolink {
                parameter.data = tsfe:id
                parameter.insertData = 1
                useCacheHash = 1
                addQueryString = 1
                addQueryString.method = get
                addQueryString.exclude = id
                forceAbsoluteUrl = 1
                returnLast = url
            }
            wrap = <meta property="og:url" content="|">
        }
        40 = TEXT
        40 {
            value = {$config.page.siteTitle}
            wrap = <meta property="og:site_name" content="|">
        }
        50 = TEXT
        50 {
            data = page:description
            required = 1
            stripHtml = 1
            wrap = <meta property="og:description" content="|">
        }
        60 = FILES
        60 {
            #gets image form media tab of page
            references {
                table = pages
                uid.data = page:uid
                fieldName = media
            }
            renderObj = TEXT
            renderObj {
                typolink {
                    parameter.data = file:current:publicUrl
                    forceAbsoluteUrl = 1
                    returnLast = url
                }
                wrap = |,
            }
            stdWrap {
                listNum = 0
                # Use logo image if none is available
                ifEmpty.cObject = TEXT
                ifEmpty.cObject.typolink {
                    parameter = EXT:tmpl/Resources/Public/Images/logo.gif
                    forceAbsoluteUrl = 1
                    returnLast = url
                }
                wrap = <meta property="og:image" content="|">
            }
        }

        100 = TEXT
        100 {
            value = {$config.page.siteTitle} : {TSFE:page|title}
            insertData = 1
            dataWrap = <meta property="title" content="|">
        }

        110 = TEXT
        110 {
            data = page:description
            required = 1
            stripHtml = 1
            wrap = <meta property="description" content="|">
        }

    }
}
*/